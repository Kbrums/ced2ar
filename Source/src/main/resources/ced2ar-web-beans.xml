<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<bean id="propertiesValidator"
		class="edu.ncrn.cornell.ced2ar.web.validators.PropertiesValidator" />
	<bean id="configurationProperties"
		class="edu.ncrn.cornell.ced2ar.api.data.ConfigurationProperties" />

	<!-- Main web app -->
	<bean id="config" class="edu.ncrn.cornell.ced2ar.api.data.Config">
		<property name="baseXDB" value="${baseXDB}" />
		<property name="baseXReaderHash" value="${baseXReaderHash}" />
		<property name="baseXWriterHash" value="${baseXWriterHash}" />
		<property name="baseXAdminHash" value="${eAPI}" />

		<property name="timeout" value="${timeout}" />
		<property name="restricted" value="${restricted}" />
		<property name="port" value="${port}" />
		<property name="eAPI" value="${eAPI}" />

		<!-- Bug report -->
		<property name="bugReportEmail" value="${bugReportEmail}" />
		<property name="bugReportSender" value="${bugReportSender}" />
		<property name="bugReportPwd" value="${bugReportPwd}" />
		<property name="bugReportEnable" value="${bugReportEnable}" />

		<property name="devFeatureProv" value="${devFeatureProv}" />
		<property name="devFeatureGoogleAnalytics" value="${devFeatureGoogleAnalytics}" />
		<property name="devFeatureEditing" value="${devFeatureEditing}" />

		<!-- Schema URIs -->
		<property name="schemaURI" value="${schemaURI}" />

		<!-- Passwords -->
		<property name="pwdIsRandom" value="${pwdIsRandom}" />
		<property name="pwdHash" value="${pwdHash}" />

		<property name="basexGenerateRandomPasswords" value="${basexGenerateRandomPasswords}" />

		<!-- Git info needs to be accessed out VersionControl bean -->
		<property name="gitEnabled" value="${gitEnabled}" />
		<property name="remoteRepoURL" value="${remoteRepoURL}" />
		
		<property name="authenticationType" value="${authenticationType}" />
		
	</bean>

	<!-- Config location -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:ced2ar-web-config.properties</value>
		</property>
	</bean>

	<!-- Task Scheduler Configuration -->
	<task:scheduler id="scheduler" pool-size="4" />
	<task:annotation-driven scheduler="scheduler" />

	<!-- Git version control -->
	<bean id="versionControl" class="edu.ncrn.cornell.ced2ar.eapi.VersionControl">
		<property name="remoteRepoURL" value="${remoteRepoURL}" />
		<property name="remoteBranch" value="${remoteBranch}" />
		<property name="remoteUser" value="${remoteUser}" />
		<property name="remotePass" value="${remotePass}" />
		<property name="localBranch" value="${localBranch}" />
		<property name="gitEnabled" value="${gitEnabled}" />
		<property name="numberOfCommitsToPushRemote" value="${numberOfCommitsToPushRemote}" />
	</bean>

	<!-- PDF Generation -->
	<bean id="pdfGenerator" class="edu.ncrn.cornell.ced2ar.eapi.PDFGenerator"
		lazy-init="false">
		<property name="pdfEnabled" value="${pdfEnabled}" />
	</bean>

	<!--  Identity Management Beans -->
<!--   
	<bean id="userDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.BaseXUserDaoImpl" lazy-init="false"/>
	<bean id="roleDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.BaseXRoleDaoImpl" lazy-init="false"/>
	<bean id="userRoleDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.BaseXUserRoleDaoImpl" lazy-init="false"/>
	<bean id="permissionDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.BaseXPermissionDaoImpl" lazy-init="false"/>
	<bean id="rolePermissionDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.BaseXRolePermissionDaoImpl" lazy-init="false"/>
 -->
	
  	 
	<bean id="userDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.PropertiesUserDaoImpl" lazy-init="false"/>
	<bean id="roleDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.PropertiesRoleDaoImpl" lazy-init="false"/>
	<bean id="userRoleDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.PropertiesUserRoleDaoImpl" lazy-init="false"/>
	<bean id="permissionDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.PropertiesPermissionDaoImpl" lazy-init="false"/>
	<bean id="rolePermissionDao" class="edu.ncrn.cornell.ced2ar.security.idmgmt.dao.impl.PropertiesRolePermissionDaoImpl" lazy-init="false"/>
	 
	 		
	<bean id="userService" class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.UserServiceImpl" lazy-init="false"/>
	<bean id="roleService" class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.RoleServiceImpl" lazy-init="false"/>
	<bean id="permissionService" class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.PermissionServiceImpl" lazy-init="false"/>
	<bean id="rolePermissionService" class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.RolePermissionServiceImpl" lazy-init="false"/>
	<bean id="userRoleService" class="edu.ncrn.cornell.ced2ar.security.idmgmt.service.impl.UserRoleServiceImpl" lazy-init="false"/>
</beans>